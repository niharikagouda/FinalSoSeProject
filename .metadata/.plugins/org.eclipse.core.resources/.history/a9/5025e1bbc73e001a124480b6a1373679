package com.italia.soaproject.rest.library.database;

import java.util.ArrayList;
import java.util.List;
import java.util.regex.Pattern;

import org.bson.Document;

import com.italia.soaproject.mongodb.JavaMongoConnection;
import com.italia.soaproject.rest.library.model.Book;
import com.mongodb.BasicDBList;
import com.mongodb.BasicDBObject;
import com.mongodb.DBObject;

public class BookDatabaseImpl implements BookDatabase {

	JavaMongoConnection conn = new JavaMongoConnection();

	/*
	 * public void addBook(Book book) {
	 * 
	 * Document doc = new Document(); doc.put("Bookname", book.getbookname());
	 * doc.put("Bookcategory", book.getbookcategory()); conn.insert("student", doc);
	 * }
	 */

	public List<Book> listBooks(String keyword) {
		Pattern regex = Pattern.compile("keyword");
		DBObject nameCl = new BasicDBObject("name", regex);
		DBObject authorCl = new BasicDBObject("author", regex);
		DBObject categoryCl = new BasicDBObject("category", regex);
		DBObject publisherCl = new BasicDBObject("publisher", regex);

		BasicDBList or = new BasicDBList();
		or.add(nameCl);
		or.add(authorCl);
		or.add(categoryCl);
		or.add(publisherCl);

		BasicDBObject basicDbObject = new BasicDBObject();

		basicDbObject.append("$or", or);

		List<Document> docs = conn.findDocument("book", basicDbObject);

		List<Book> output = new ArrayList<Book>();
		for (Document dc : docs) {
			Book book = new Book(dc.getString("name"), dc.getString("category"), dc.getString("ISBN"),
					dc.getString("author"), dc.getString("publisher"), dc.getInteger("latest_publisher"));
			output.add(book);
			
			System.out.println(book.toString());

		}

	
		return output;

	}

	public Book isValidBook(Book search) {
		BasicDBObject match = new BasicDBObject();
		match.append("name", search.getBookname());
		match.append("author", search.getBookauthor());
		match.append("category", search.getBookcategory());

		List<Document> SearchDocs = conn.findDocument("search", match);

		if (SearchDocs.size() == 1) {
			Document doc = SearchDocs.get(0);

			return search;
		}

		return null;
	}

}
